module.exports = {
  parser: '@typescript-eslint/parser',
  plugins: ['import', 'unused-imports'],
  parserOptions: {
    sourceType: 'module',
  },
  settings: {
    'import/parsers': {
      '@typescript-eslint/parser': ['.ts', '.tsx'],
    },
    'import/resolver': {
      node: {
        extensions: [
          '.js',
          '.jsx',
          '.ts',
          '.tsx',
          '.d.ts',
          '.android.js',
          '.android.jsx',
          '.android.ts',
          '.android.tsx',
          '.ios.js',
          '.ios.jsx',
          '.ios.ts',
          '.ios.tsx',
          '.web.js',
          '.web.jsx',
          '.web.ts',
          '.web.tsx',
        ],
      },
      typescript: {
        alwaysTryTypes: true,
        project: './tsconfig.json',
      },
    },
  },
  extends: [
    'prettier',
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    '@react-native-community',
    'plugin:prettier/recommended',
  ],
  ignorePatterns: ['*.json'],
  rules: {
    quotes: [
      'error',
      'single',
      {
        avoidEscape: true,
      },
    ],
    'unused-imports/no-unused-imports-ts': 2,
    'import/no-unresolved': 'error',
    warnIgnored: 'off',
    '@typescript-eslint/ban-ts-comment': [
      'error',
      {
        'ts-expect-error': 'allow-with-description',
        'ts-ignore': false,
        'ts-nocheck': false,
        'ts-check': false,
        minimumDescriptionLength: 5,
      },
    ],
    'eslint-comments/no-unused-disable': 'off',
    'import/no-anonymous-default-export': 'off',
    'no-empty-pattern': 2,
    '@typescript-eslint/no-empty-function': 1,
    // '@typescript-eslint/ban-ts-comment': 2,
    '@typescript-eslint/no-explicit-any': 1,
    '@typescript-eslint/explicit-module-boundary-types': 0,
    'react/jsx-filename-extension': ['error', { extensions: ['.tsx'] }],
    'react-native/no-unused-styles': 2,
    'react-native/split-platform-components': 2,
    'react-native/no-inline-styles': 0,
    'react-native/no-color-literals': 0,
    'react-native/no-raw-text': 0,
    'import/extensions': 'off',
    'no-shadow': 0,
    'sort-imports': [
      'warn',
      {
        ignoreCase: true,
        ignoreDeclarationSort: true,
      },
    ],
    'import/no-duplicates': 2,
    'import/no-useless-path-segments': 2,
    'import/prefer-default-export': 0,
    'import/named': 0,
    'import/namespace': 0,
    'import/default': 0,
    'import/no-named-as-default-member': 0,
    'import/no-named-as-default': 0,
    'import/no-unused-modules': 2,
    'import/no-deprecated': 0,
    '@typescript-eslint/indent': 0,
    'no-async-promise-executor': 'off',
    'react-hooks/rules-of-hooks': 1,
    'react-hooks/exhaustive-deps': ['warn', { additionalHooks: '(useDidMount)' }],
    'jest/no-identical-title': 2,
    'jest/valid-expect': 2,
    '@typescript-eslint/naming-convention': [
      'error',
      {
        selector: 'variable',
        format: ['camelCase', 'PascalCase', 'UPPER_CASE', 'strictCamelCase', 'snake_case'],
        leadingUnderscore: 'allow',
      },
      {
        selector: 'function',
        format: ['camelCase', 'snake_case', 'PascalCase'],
        leadingUnderscore: 'allow',
      },
      {
        selector: 'variableLike',
        format: ['camelCase', 'snake_case', 'PascalCase'],
        leadingUnderscore: 'allow',
      },
      {
        selector: 'typeLike',
        format: ['PascalCase', 'UPPER_CASE'],
      },
      {
        selector: 'interface',
        format: ['PascalCase', 'UPPER_CASE'],
        leadingUnderscore: 'allow',
      },
    ],
    'prefer-destructuring': 2,
    // 'no-nested-ternary': 2,
    'comma-dangle': 0,
    'prettier/prettier': [
      'error',
      {
        'semi-style': ['error', 'last'],
        endOfLine: 'auto',
      },
    ],
    semi: [0, 'never'],
    'no-unused-vars': 0,
    '@typescript-eslint/no-unused-vars': 0,
    'unused-imports/no-unused-imports': 'error',
    'unused-imports/no-unused-vars': [
      'warn',
      { vars: 'all', varsIgnorePattern: '^_', args: 'after-used', argsIgnorePattern: '^_' },
    ],
    '@typescript-eslint/handle-callback-err': 'off',
    '@typescript-eslint/no-var-requires': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    eqeqeq: 'off',
    'no-bitwise': 'off',
    '@typescript-eslint/no-empty-function': 'off',
    '@typescript-eslint/ban-types': 'off',
    'prefer-destructuring': 'off',
    'react-native/no-unused-styles': 'off',
    'react-native/split-platform-components': 'off',
    '@typescript-eslint/no-empty-interface': 'off',
  },
  env: {
    node: true,
    es2020: true,
  },
};
